// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CheckBox Input -> Custom Input checkbox input ilk render anında snapshot ile eşleşmeli 1`] = `
<KeyboardProvider
  enabled={true}
>
  <View
    flex={1}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      animated={false}
      collapsable={false}
      flex={0}
      focusable={true}
      name="test"
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "flex": 0,
          "flexDirection": "column",
        }
      }
      testID="checkbox-input-test-id"
    >
      <View
        alignItemsCenter={true}
        style={
          {
            "alignItems": "center",
            "color": "rgba(255, 255, 255, 1)",
            "flex": undefined,
            "flexDirection": "row",
            "fontFamily": "Markpro-Medium",
            "fontSize": 18,
            "height": "auto",
            "letterSpacing": 0.5,
            "width": "100%",
          }
        }
        testID="checkbox-container-test-id"
      >
        <View
          alignItemsCenter={true}
          borderColor="rgba(161, 173, 175, 1)"
          borderRadius={8}
          borderWidth={2}
          height={24}
          justifyContentCenter={true}
          style={
            {
              "alignItems": "center",
              "flex": undefined,
              "flexDirection": "column",
              "height": 46,
              "justifyContent": "center",
              "maxHeight": 46,
              "width": 46,
            }
          }
          width={24}
        />
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        [
          {
            "alignSelf": "center",
            "elevation": 999999,
            "flex": 0,
            "maxWidth": "100%",
            "position": "absolute",
            "zIndex": 999999,
          },
          {
            "flexDirection": "column-reverse",
            "justifyContent": "flex-start",
            "top": 30,
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          {
            "bottom": 0,
          }
        }
      >
        <RCTSafeAreaView />
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        [
          {
            "alignSelf": "center",
            "elevation": 999999,
            "flex": 0,
            "maxWidth": "100%",
            "position": "absolute",
            "zIndex": 999999,
          },
          {
            "bottom": 40,
            "flexDirection": "column",
            "justifyContent": "flex-end",
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          {
            "bottom": 0,
          }
        }
      >
        <RCTSafeAreaView />
      </View>
    </View>
  </View>
</KeyboardProvider>
`;
