// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Default Input -> Custom Input ilk render anında snapshot ile eşleşmeli 1`] = `
<KeyboardProvider
  enabled={true}
>
  <View
    flex={1}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
        "flexDirection": "column",
      }
    }
  >
    <View
      height={56}
      style={
        {
          "flex": undefined,
          "flexDirection": "column",
          "height": 108,
          "maxHeight": 108,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        animated={false}
        backgroundColor="rgba(61, 88, 94, 1)"
        collapsable={false}
        focusable={true}
        height={56}
        justifyContentCenter={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        overflowHidden={true}
        paddingHorizontal={16}
        paddingVertical={16}
        style={
          {
            "backgroundColor": "rgba(61, 88, 94, 1)",
            "flex": 1,
            "flexDirection": "column",
            "height": 108,
            "justifyContent": "center",
            "maxHeight": 108,
            "overflow": "hidden",
            "paddingHorizontal": 31,
            "paddingVertical": 31,
          }
        }
      >
        <View
          alignItemsCenter={true}
          flex={1}
          justifyContentCenter={true}
          style={
            {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            flex={1}
            style={
              {
                "flex": 1,
                "flexDirection": "column",
              }
            }
          >
            <TextInput
              autoCapitalize="none"
              editable={true}
              keyboardType="default"
              name="test"
              onChangeText={[Function]}
              style={
                {
                  "color": "rgba(255, 255, 255, 1)",
                  "fontFamily": "Markpro-Medium",
                  "fontSize": 18,
                  "height": 89,
                  "letterSpacing": 0.5,
                  "width": "100%",
                }
              }
              testID="default-input-test-id"
            />
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        [
          {
            "alignSelf": "center",
            "elevation": 999999,
            "flex": 0,
            "maxWidth": "100%",
            "position": "absolute",
            "zIndex": 999999,
          },
          {
            "flexDirection": "column-reverse",
            "justifyContent": "flex-start",
            "top": 30,
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          {
            "bottom": 0,
          }
        }
      >
        <RCTSafeAreaView />
      </View>
    </View>
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        [
          {
            "alignSelf": "center",
            "elevation": 999999,
            "flex": 0,
            "maxWidth": "100%",
            "position": "absolute",
            "zIndex": 999999,
          },
          {
            "bottom": 40,
            "flexDirection": "column",
            "justifyContent": "flex-end",
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          {
            "bottom": 0,
          }
        }
      >
        <RCTSafeAreaView />
      </View>
    </View>
  </View>
</KeyboardProvider>
`;
