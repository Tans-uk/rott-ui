// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`IBAN Input -> Custom Input ilk render anında snapshot ile eşleşmeli 1`] = `
<View
  flex={1}
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <KeyboardProvider
    enabled={true}
  >
    <View
      flex={1}
      pointerEvents="box-none"
      style={
        {
          "flex": 1,
          "flexDirection": "column",
        }
      }
    >
      <View
        style={
          {
            "flex": 1,
          }
        }
      >
        <View
          style={
            {
              "flex": undefined,
              "flexDirection": "row",
            }
          }
        >
          <TextInput
            editable={true}
            keyboardType="number-pad"
            maxLength={34}
            name="test"
            numberOfLines={1}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="TR00 0000 0000 0000 0000 0000 00"
            style={
              {
                "color": "rgba(255, 255, 255, 1)",
                "fontFamily": "Markpro-Medium",
                "fontSize": 14,
                "height": 89,
                "letterSpacing": 0.5,
                "width": "100%",
              }
            }
            testID="iban-input-test-id"
            value=""
          />
          <View
            absolute={true}
            bottom={16}
            right={0}
            style={
              {
                "bottom": 31,
                "flex": undefined,
                "flexDirection": "column",
                "position": "absolute",
                "right": 0,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              animated={false}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "flex": 1,
                  "flexDirection": "column",
                }
              }
              testID="clear-iban-icon-test-id"
            >
              <View
                style={
                  {
                    "flex": undefined,
                    "flexDirection": "column",
                  }
                }
              >
                <SvgMock
                  fill="rgba(161, 173, 175, 1)"
                  height={46}
                  stroke="rgba(161, 173, 175, 1)"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={0}
                  width={46}
                />
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            {
              "flexShrink": 1,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          [
            {
              "alignSelf": "center",
              "elevation": 999999,
              "flex": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "zIndex": 999999,
            },
            {
              "flexDirection": "column-reverse",
              "justifyContent": "flex-start",
              "top": 30,
              "width": 750,
            },
          ]
        }
      >
        <View
          style={
            {
              "bottom": 0,
            }
          }
        >
          <RCTSafeAreaView />
        </View>
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          [
            {
              "alignSelf": "center",
              "elevation": 999999,
              "flex": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "zIndex": 999999,
            },
            {
              "bottom": 40,
              "flexDirection": "column",
              "justifyContent": "flex-end",
              "width": 750,
            },
          ]
        }
      >
        <View
          style={
            {
              "bottom": 0,
            }
          }
        >
          <RCTSafeAreaView />
        </View>
      </View>
    </View>
  </KeyboardProvider>
</View>
`;
