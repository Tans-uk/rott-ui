// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Phone Input -> Custom Input phone input ilk render anında snapshot ile eşleşmeli 1`] = `
<View
  flex={1}
  pointerEvents="box-none"
  style={
    {
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <View
    style={
      {
        "flex": undefined,
        "flexDirection": "row",
      }
    }
  >
    <TextInput
      editable={true}
      keyboardType="number-pad"
      maxLength={16}
      name="test"
      onChangeText={[Function]}
      placeholder="0(XXX) XXX XX XX"
      style={
        {
          "color": "rgba(255, 255, 255, 1)",
          "fontFamily": "Markpro-Medium",
          "fontSize": 18,
          "height": 89,
          "letterSpacing": 0.5,
          "width": "100%",
        }
      }
      testID="phone-input-test-id"
      value=""
    />
    <View
      absolute={true}
      bottom={16}
      right={0}
      style={
        {
          "bottom": 31,
          "flex": undefined,
          "flexDirection": "column",
          "position": "absolute",
          "right": 0,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        alignItemsFlexEnd={true}
        animated={false}
        collapsable={false}
        focusable={true}
        height={40}
        justifyContentFlexEnd={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "flex-end",
            "flex": 1,
            "flexDirection": "column",
            "height": 77,
            "justifyContent": "flex-end",
            "maxHeight": 77,
            "width": 77,
          }
        }
        testID="contact-pressable-test-id"
        width={40}
      >
        <View
          style={
            {
              "flex": undefined,
              "flexDirection": "column",
            }
          }
          testID="phone-icon-test-id"
        >
          <Text
            fill="rgba(161, 173, 175, 1)"
            height={46}
            strokeWidth={0}
            testID="mock-icon"
            width={46}
          >
            MockIcon
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      [
        {
          "alignSelf": "center",
          "elevation": 999999,
          "flex": 0,
          "maxWidth": "100%",
          "position": "absolute",
          "zIndex": 999999,
        },
        {
          "flexDirection": "column-reverse",
          "justifyContent": "flex-start",
          "top": 30,
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "bottom": 0,
        }
      }
    >
      <RCTSafeAreaView />
    </View>
  </View>
  <View
    onLayout={[Function]}
    pointerEvents="box-none"
    style={
      [
        {
          "alignSelf": "center",
          "elevation": 999999,
          "flex": 0,
          "maxWidth": "100%",
          "position": "absolute",
          "zIndex": 999999,
        },
        {
          "bottom": 40,
          "flexDirection": "column",
          "justifyContent": "flex-end",
          "width": 750,
        },
      ]
    }
  >
    <View
      style={
        {
          "bottom": 0,
        }
      }
    >
      <RCTSafeAreaView />
    </View>
  </View>
</View>
`;
